---
- name: Install nginx
  apt: name=nginx state=latest update_cache=true

- name: install letsencrypt
  apt: name=letsencrypt state=latest
  when: letsencrypt

- name: Remove default nginx config
  file: name=/etc/nginx/sites-enabled/default state=absent

- name: Setting waiting web page
  copy: src=index.html dest=/var/www/html/index.html

- name: configuring nginx
  copy: src=nginx.conf dest=/etc/nginx/nginx.conf

- name: adding default proxy behaviour
  copy: src=proxy.conf dest=/etc/nginx/sites-available/proxy.conf

- name: Install nginx site for letsencrypt requests
  template:
    src: templates/nginx-http.j2
    dest: /etc/nginx/sites-enabled/http
  notify: restart nginx
  when: letsencrypt

- name: Create letsencrypt certificate
  shell: letsencrypt certonly -n --webroot -w /var/www/html -m {{ letsencrypt_email }} --agree-tos -d {{ domain_name }}
  args:
    creates: /etc/letsencrypt/live/{{ domain_name }}
  when: letsencrypt

- name: previous task to generate self signed certificate
  file: 
    path: /etc/nginx/ssl
    state: directory
    mode: 0755
  when: not letsencrypt

- name: generating self signed certificated
  command: openssl req -new -nodes -x509 -subj "/CN={{ aws_public_hostname }}" -days 3650 -keyout /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt -extensions v3_ca
  args:
    creates: /etc/nginx/ssl/nginx.crt
  when: not letsencrypt

- name: Generate dhparams
  shell: openssl dhparam -out /etc/nginx/dhparams.pem 2048
  args:
    creates: /etc/nginx/dhparams.pem

- name: Install nginx site for specified site
  template:
    src: templates/nginx-le.j2
    dest: /etc/nginx/sites-enabled/le
  notify: restart nginx
  when: letsencrypt

- name: enabling site config
  template:
    src: templates/default.conf.j2
    dest: /etc/nginx/sites-enabled/default
  notify: restart nginx
  when: not letsencrypt

- name: adding entry for OpenVidu requests
  template:
    src: templates/kms-ov.conf.j2
    dest: /etc/nginx/sites-enabled/kms-ov
  notify: restart nginx

- name: Add letsencrypt cronjob for cert renewal
  cron:
    name: letsencrypt_renewal
    special_time: weekly
    job: letsencrypt --renew certonly -n --webroot -w /var/www/letsencrypt -m {{ letsencrypt_email }} --agree-tos -d {{ domain_name }} -d {{ aws_eip }}
  when: letsencrypt

