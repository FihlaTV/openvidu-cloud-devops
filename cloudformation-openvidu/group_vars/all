###########################################
# OpenVidu Server configuration parameters
###########################################

# See https://openvidu.io/docs/reference-docs/openvidu-server-params

# Which OpenVidu version to use
# Check out https://github.com/OpenVidu/openvidu/releases
openvidu_version: OPENVIDU_VERSION

# Parameter "server.port"
# Openvidu port to connect to
openvidu_server_port: 4443

# Parameter "openvidu.secret"
# Use this to connect to OpenVidu endpoint
openvidu_secret: "MY_SECRET"

# Parameter "openvidu.recording.public-access"
# if true any client can connect to
# https://OPENVIDU_SERVER_IP:OPENVIDU_PORT/recordings/any_session_file.mp4
# and access any recorded video file. If false this path will be secured with
# openvidu.secret param just as OpenVidu Server dashboard at
# https://OPENVIDU_SERVER_IP:OPENVIDU_PORT
# Values: true | false
openvidu_recording_public_access: FREEHTTPACCESTORECORDINGVIDEOS

# Parameter "openvidu.recording.notification"
# Which users should receive the recording events in the client side
# (recordingStarted, recordingStopped). Can be all (every user connected to
# the session), publisher_moderator (users with role 'PUBLISHER' or
# 'MODERATOR'), moderator (only users with role 'MODERATOR') or none
# (no user will receive these events)
openvidu_recording_notification: OPENVIDURECORDINGNOTIFICATION

# Parameter "openvidu.recording.autostop-timeout"
# Timeout in seconds for recordings to automatically stop (and the session involved to be closed)
# when conditions are met: a session recording is started but no user is publishing to it or a session
# is being recorded and last user disconnects. If a user publishes within the timeout in either case,
# the automatic stop of the recording is cancelled
# 0 means no timeout
openvidu_recording_timeout: OPENVIDURECORDINGTIMEOUT

# Parameter "openvidu.streams.video.max-recv-bandwidth"
# Maximum video bandwidth sent from clients to OpenVidu Server, in kbps.
# 0 means unconstrained
openvidu_streams_video_max_recv_bandwidth: OPENVIDUSTREAMSVIDEOMAX-RECV-BANDWIDTH

# Parameter "openvidu.streams.video.min-recv-bandwidth"
# Minimum video bandwidth sent from clients to OpenVidu Server, in kbps.
# 0 means unconstrained
openvidu_streams_video_min_recv_bandwidth: OPENVIDUSTREAMSVIDEOMIN-RECV-BANDWIDTH

# Parameter "openvidu.streams.video.max-send-bandwidth"
# Maximum video bandwidth sent from OpenVidu Server to clients, in kbps.
# 0 means unconstrained
openvidu_streams_video_max_send_bandwidth: OPENVIDUSTREAMSVIDEOMAX-SEND-BANDWIDTH

# Parameter "openvidu.streams.video.min-send-bandwidth"
# Minimum video bandwidth sent from OpenVidu Server to clients, in kbps.
# 0 means unconstrained
openvidu_streams_video_min_send_bandwidth: OPENVIDUSTREAMSVIDEOMIN-SEND-BANDWIDTH

# Parameter "openvidu.webhook"
# true to enable OpenVidu Server Webhook service. false' otherwise
# Values: true | false
openvidu_webhook: WEBHOOK_ENABLED

# Parameter "openvidu.webhook.endpoint"
# HTTP endpoint where OpenVidu Server will send Webhook HTTP POST messages
# Must be a valid URL: http(s)://ENDPOINT
openvidu_webhook_endpoint: "WEBHOOK_ENDPOINT"

# Parameter "openvidu.webhook.headers"
# List of headers that OpenVidu Server Webhook service will attach to HTTP POST messages
openvidu_webhook_headers: "WEBHOOK_HEADERS"

# Parameter "openvidu.webhook.events"
# List of events that will be sent by OpenVidu Server Webhook service
# Leave blank if all events.
openvidu_webhook_events: WEBHOOK_EVENTS

################
# Demos Section
################

# Set to yes if you want to deploy OpenVidu examples and demos
# which will show you the server functionality
deploy_demos: WANTDEMOS

# MySQL needed by one of demos.
mysql_root_pass: egh1erieVi8oph%
mysql_database: openvidu_sample_app

# Demos versions
demos_release: DEMOS_VERSION
openvidu_call_release: OVC_VERSION

########################
# Instance IP and names
########################

# Certificate type
# You can choose:
# 1. Self Signed (selfsigned) The certificate will be generate within
# the instance (default)
# 2. Let's encrypt (letsencrypt) Free SSL certificate provider
# 3. Your own certificate (owncert) If you own a SSL certificate, use this one.
# See roles > nginx > files to
#
whichcert: selfsigned

# Your custom domain name i.e. openvidu.example.com
domain_name: DOMAIN_NAME

# Let's Encrypt email to receive notifications
letsencrypt_email: LETSENCRYPT_EMAIL

# Stats
# Set to false if you don't wanna share some information with us:
# Info:
# - OpenVidu version
# - AWS Region
# - AWS Availability zone
allowsendinfo: true

# AWS Configuration
aws_public_ip: AWS_EIP
aws_public_hostname: AWS_PUBLIC_HOSTNAME
run_ec2: false
