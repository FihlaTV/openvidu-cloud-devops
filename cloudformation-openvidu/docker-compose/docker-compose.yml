# ------------------------------------------------------------------------------
#
#    DO NOT MODIFY THIS FILE !!!
#
#    Configuration properties should be specified in .env file
#
#    Application based on OpenVidu should be specified in
#    docker-compose.override.yml file
#
#    This docker-compose file coordinates all services of OpenVidu CE Plarform.
#
#    This file will be overridden when update OpenVidu Platform
#
# ------------------------------------------------------------------------------

version: '3.1'

services:

    openvidu-server:
        image: ${OV_IMAGE}
        restart: on-failure
        network_mode: host
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ${OPENVIDU_RECORDING_FOLDER}:${OPENVIDU_RECORDING_FOLDER}
        env_file:
            - .env
        environment:
            - SERVER_SSL_ENABLED=false
            - SERVER_PORT=5443
            - OPENVIDU_SECRET=${OPENVIDU_SECRET}
            - OPENVIDU_PUBLICURL=
            - KMS_URIS=["ws://localhost:8888/kurento"]
            - COTURN_IP=${OPENVIDU_DOMAIN_OR_PUBLIC_IP}
            - COTURN_REDIS_IP=127.0.0.1
            - LOGGING_LEVEL_ROOT=${OV_CE_DEBUG_LEVEL:-INFO}
            - OPENVIDU_RECORDING=true
            - OPENVIDU_RECORDING_PATH=${OPENVIDU_RECORDING_FOLDER}
            - OPENVIDU_RECORDING_PUBLIC-ACCESS=${OPENVIDU_RECORDING_PUBLIC-ACCESS}
            - OPENVIDU_RECORDING_NOTIFICATION=${OPENVIDU_RECORDING_NOTIFICATION}
            - OPENVIDU_RECORDING_AUTOSTOP-TIMEOUT=${OPENVIDU_RECORDING_AUTOSTOP-TIMEOUT}
            - OPENVIDU_CDR=${OPENVIDU_CDR}
            - OPENVIDU_STREAMS_VIDEO_MAX-RECV-BANDWIDTH=${OPENVIDU_STREAMS_VIDEO_MAX-RECV-BANDWIDTH}
            - OPENVIDU_STREAMS_VIDEO_MIN-RECV-BANDWIDTH=${OPENVIDU_STREAMS_VIDEO_MIN-RECV-BANDWIDTH}
            - OPENVIDU_STREAMS_VIDEO_MAX-SEND-BANDWIDTH=${OPENVIDU_STREAMS_VIDEO_MAX-SEND-BANDWIDTH}
            - OPENVIDU_STREAMS_VIDEO_MIN-SEND-BANDWIDTH=${OPENVIDU_STREAMS_VIDEO_MIN-SEND-BANDWIDTH}
            - OPENVIDU_WEBHOOK=${OPENVIDU_WEBHOOK}
            - OPENVIDU_WEBHOOK_ENDPOINT=${OPENVIDU_WEBHOOK_ENDPOINT}
            - OPENVIDU_RECORDING_COMPOSED-URL=
            - OPENVIDU_WEBHOOK_HEADERS=${OPENVIDU_WEBHOOK_HEADERS}

    kms:
        image: ${KMS_IMAGE:-kurento/kurento-media-server-dev:6.13}
        restart: on-failure
        network_mode: host
        ulimits:
          core: -1
        environment:
            - KMS_EXTERNAL_ADDRESS=auto
            - KMS_MIN_PORT=40000
            - KMS_MAX_PORT=57000
            - GST_DEBUG=${KMS_DEBUG_LEVEL:-}

    redis:
        image: redis:5.0.7
        restart: on-failure
        network_mode: host

    coturn:
        image: openvidu/openvidu-coturn:1.0.0-beta1
        restart: on-failure
        network_mode: host
        environment:
            - REDIS_IP=127.0.0.1
            - TURN_LISTEN_PORT=3478
            - DB_NAME=0
            - DB_PASSWORD=turn
            - MIN_PORT=57001
            - MAX_PORT=65535

    nginx:
        image: openvidu/openvidu-proxy:1.0.0-beta2
        restart: on-failure
        network_mode: host
        volumes:
            - ./nginx/default.conf:/custom_nginx_conf/default.conf
            - ./nginx/default-app.conf:/custom_nginx_conf/default-app.conf
            - ./nginx/index.html:/var/www/html/index.html
            - ./certificates:/etc/letsencrypt
            - ./owncert:/owncert
        environment:
            - DOMAIN_OR_PUBLIC_IP=${OPENVIDU_DOMAIN_OR_PUBLIC_IP}
            - CERTIFICATE_TYPE=${CERTIFICATE_TYPE}
            - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
            - NGINX_CONF=custom
