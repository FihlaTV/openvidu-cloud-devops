add_header X-Frame-Options SAMEORIGIN;
add_header X-Content-Type-Options nosniff;

upstream kibana {
    server localhost:5601;
}

upstream inspector {
{% if whichcert == "letsencrypt" or whichcert == "owncert" %}
    server {{ domain_name }}:5443;
{% else %}
    server {{ openvidu_publicurl }}:5443;
{% endif %}
}

server {
    listen 127.0.0.1:80;
    server_name _;

    location /kibana {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        rewrite ^/kibana/(.*)$ /$1 break;
        proxy_pass http://kibana/;
    }
}

server {
    listen 443 ssl default deferred;
{% if whichcert == "letsencrypt" or whichcert == "owncert" %}
    server_name {{ domain_name }};
{% else %}
    server_name {{ openvidu_publicurl }};
{% endif %}

    ssl on;
{% if whichcert == "letsencrypt" %}
    ssl_certificate         /etc/letsencrypt/live/{{ domain_name }}/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/{{ domain_name }}/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/{{ domain_name }}/fullchain.pem;
{% else %}
    ssl_certificate /etc/nginx/ssl/nginx.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx.key;
{% endif %}

    include sites-available/proxy.conf;

    root /var/www/html;

    location /inspector {
        rewrite ^/inspector/(.*)$ /$1 break;
        proxy_pass http://inspector/;
    }

    location /kibana {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        rewrite ^/kibana/(.*)$ /$1 break;
        proxy_pass http://kibana/;
        auth_basic "Openvidu Monitoring";
        auth_basic_user_file /etc/nginx/conf.d/kibana.htpasswd;
    }
}
