# Certificate type
# You can choose:
# 1. Self Signed (selfsigned) The certificate will be generate within
#    the instance (default)
# 2. Let's encrypt (letsencrypt) Free SSL certificate provider
# 3. Your own certificate (owncert) If you own a SSL certificate, use this one.
#    You need to provide your certificate files (nginx.key and nginx.crt) and 
#    put then in roles/nginx/files folder.     
# 
whichcert: selfsigned

# Your custom domain name i.e. openvidu.example.com
domain_name: DOMAIN_NAME

# Let's Encrypt email to receive notifications
letsencrypt_email: LETSENCRYPT_EMAIL

# OpenVidu

# Which OpenVidu version to use
version: OPENVIDU_VERSION

# Use this to connect to OpenVidu endpoint
openvidusecret: "MY_SECRET"

# Credentials needed to download the jar file from 
# https://pro.openvidu.io
# Please contact openvidu@gmail.com to request one.
openvidu_pro_username: OPENVIDU_PRO_USERNAME
openvidu_pro_password: OPENVIDU_PRO_PASSWORD

# Openvidu port to connect to
openvidu_port: 4443

# if true any client can connect to
# https://OPENVIDU_SERVER_IP:OPENVIDU_PORT/recordings/any_session_file.mp4
# and access any recorded video file. If false this path will be secured with
# openvidu.secret param just as OpenVidu Server dashboard at
# https://OPENVIDU_SERVER_IP:OPENVIDU_PORT
# Values: true | false
FreeHTTPAccesToRecordingVideos: FREEHTTPACCESTORECORDINGVIDEOS

# What parameter should be used to distribute the creation of new sessions
# (and therefore distribution of load) among all available KMSs. 
# Can be: [streams, sessions, mediaObjects, cpu]
OpenviduClusterLoadStrategy: OPENVIDUCLUSTERLOADSTRATEGY

# Which users should receive the recording events in the client side
# (recordingStarted, recordingStopped). Can be all (every user connected to 
# the session), publisher_moderator (users with role 'PUBLISHER' or 
# 'MODERATOR'), moderator (only users with role 'MODERATOR') or none 
# (no user will receive these events)
OpenviduRecordingNotification: OPENVIDURECORDINGNOTIFICATION

# Maximum video bandwidth sent from clients to OpenVidu Server, in kbps.
# 0 means unconstrained
OpenviduStreamsVideoMaxRecvBandwidth: OPENVIDUSTREAMSVIDEOMAX-RECV-BANDWIDTH

# Minimum video bandwidth sent from clients to OpenVidu Server, in kbps.
# 0 means unconstrained
OpenviduStreamsVideoMinRecvBandwidth: OPENVIDUSTREAMSVIDEOMIN-RECV-BANDWIDTH

# Maximum video bandwidth sent from OpenVidu Server to clients, in kbps.
# 0 means unconstrained
OpenviduStreamsVideoMaxSendBandwidth: OPENVIDUSTREAMSVIDEOMAX-SEND-BANDWIDTH

# Minimum video bandwidth sent from OpenVidu Server to clients, in kbps.
# 0 means unconstrained
OpenviduStreamsVideoMinSendBandwidth: OPENVIDUSTREAMSVIDEOMIN-SEND-BANDWIDTH

# true to enable OpenVidu Server Webhook service. false' otherwise
# Values: true | false
webhook_enabled: WEBHOOK_ENABLED

# HTTP endpoint where OpenVidu Server will send Webhook HTTP POST messages
# Must be a valid URL: http(s)://ENDPOINT
webhook_endpoint: WEBHOOK_ENDPOINT

# List of headers that OpenVidu Server Webhook service will attach to HTTP POST messages
webhook_headers: "WEBHOOK_HEADERS"

# List of events that will be sent by OpenVidu Server Webhook service
# Leave blank if all events.
webhook_events: WEBHOOK_EVENTS

# Instances IPs and names

# Should be the same than in the inventory file
ov_public_ip: OPENVIDU_INSTANCE_PUBLIC_IP

# A comma separate list of IPs from the KMS instances
kms_endpoint_ips: KURENTO_ENDPOINTS

# For selfsigned certificate, type the public domain name
ov_public_hostname: OPENVIDU_INSTANCE_PUBLIC_DOMAIN_NAME

# AWS Configuration
run_ec2: false
aws_default_region: AWS_DEFAULT_REGION

# Port configuration
# We divide port range in two, half for coturn server and the other half
# for OpenVidu Server. Replace according to your needs:
# i.e. 1024 ~ 32255 for coturn and 32256 ~ 65535 for KMS

# Turn port config
turn_min_port: TURN_MIN_PORT
turn_max_port: TURN_MAX_PORT

# Kurento port config
kurento_min_port: KURENTO_MIN_PORT
kurento_max_port: KURENTO_MAX_PORT

# Kibana dashboard configuration (Credentials)
KibanaUser: kibanaadmin
KibanaPassword: "MY_SECRET"
